{"version":3,"sources":["../../../.tmp/datepicker2/common/bs-calendar-options.provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAY,YAAA,EAAa,MAAO,eAAA,CAAgB;AAEzD,IAAM,IAAA,GAAO,MAAA,CAAO;AACpB,IAAM,KAAA,GAAQ,OAAA,CAAQ;AAStB;IAAA;QAWS,aAAQ,GAAyC,IAAI,YAAY,EAAE,CAAC;QAEnE,YAAO,GAAW,CAAC,CAAC;IAoB9B,CAAC;IA9BC,sBAAW,0CAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACxC,CAAC;aAED,UAAkB,KAAa;YAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAUM,uCAAM,GAAb,UAAc,KAAwB;QACpC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,sBAAW,0CAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,2CAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IACI,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,6BAAC;CAjCD,AAiCC,IAAA;SAjCY,sBAAsB","file":"bs-calendar-options.provider.js","sourceRoot":"","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\n\nconst left = 'left';\nconst right = 'right';\n\nexport interface BsCalendarOptions {\n  // should be `left` or `right`\n  bsRole: string;\n  offset?: number;\n}\n\n\nexport class BsCalendarOptionsClass implements BsCalendarOptions {\n  public bsRole: string;\n\n  public get offset(): number {\n    return this.isLeft ? 0 : this._offset;\n  }\n\n  public set offset(value: number) {\n    this._offset = value;\n  }\n\n  public onUpdate: EventEmitter<BsCalendarOptionsClass> = new EventEmitter();\n\n  private _offset: number = 1;\n\n  public update(value: BsCalendarOptions): void {\n    Object.assign(this, value);\n    this.onUpdate.emit(this);\n  }\n\n  public get isLeft(): boolean {\n    return this.bsRole === left;\n  }\n\n  public get isRight(): boolean {\n    return this.bsRole === right;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}