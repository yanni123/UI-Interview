var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable, EventEmitter } from '@angular/core';
import { OnChange } from '../../utils/decorators';
import * as moment from 'moment';
// todo: should I add view end date?
var BsDatePickerState = (function () {
    function BsDatePickerState() {
        this.selectedDateChange = new EventEmitter();
        this.selectedEndDateChange = new EventEmitter();
        this.activeDateChange = new EventEmitter();
        this.viewDateChange = new EventEmitter();
        this.showCalendarsChange = new EventEmitter();
    }
    BsDatePickerState.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    BsDatePickerState.ctorParameters = function () { return []; };
    __decorate([
        OnChange(),
        __metadata("design:type", Object)
    ], BsDatePickerState.prototype, "selectedDate", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", Object)
    ], BsDatePickerState.prototype, "selectedEndDate", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", Object)
    ], BsDatePickerState.prototype, "activeDate", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", Object)
    ], BsDatePickerState.prototype, "viewDate", void 0);
    __decorate([
        OnChange(),
        __metadata("design:type", Boolean)
    ], BsDatePickerState.prototype, "showCalendars", void 0);
    return BsDatePickerState;
}());
export { BsDatePickerState };
//# sourceMappingURL=bs-date-picker-state.provider.js.map