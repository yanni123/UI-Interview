{"version":3,"sources":["../../../.tmp/datepicker2/common/bs-date-picker-state.provider.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAY,YAAA,EAAa,MAAO,eAAA,CAAgB;AACzD,OAAO,EAAE,QAAA,EAAS,MAAO,wBAAA,CAAyB;AAClD,OAAO,KAAK,MAAA,MAAY,QAAA,CAAS;AAEjC,oCAAoC;AAEpC;IAAA;QAES,uBAAkB,GAAgC,IAAI,YAAY,EAAiB,CAAC;QAGpF,0BAAqB,GAAgC,IAAI,YAAY,EAAiB,CAAC;QAGvF,qBAAgB,GAAgC,IAAI,YAAY,EAAiB,CAAC;QAGlF,mBAAc,GAAgC,IAAI,YAAY,EAAiB,CAAC;QAGhF,wBAAmB,GAAgC,IAAI,YAAY,EAAiB,CAAC;IAO9F,CAAC;IANM,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAnBY;QAAX,QAAQ,EAAE;;2DAAoC;IAGnC;QAAX,QAAQ,EAAE;;8DAAuC;IAGtC;QAAX,QAAQ,EAAE;;yDAAkC;IAGjC;QAAX,QAAQ,EAAE;;uDAAgC;IAG/B;QAAX,QAAQ,EAAE;;4DAA+B;IAQ5C,wBAAC;CArBD,AAqBC,IAAA;SArBY,iBAAiB","file":"bs-date-picker-state.provider.js","sourceRoot":"","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { OnChange } from '../../utils/decorators';\nimport * as moment from 'moment';\n\n// todo: should I add view end date?\n\nexport class BsDatePickerState {\n  @OnChange() public selectedDate: moment.Moment;\n  public selectedDateChange: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\n\n  @OnChange() public selectedEndDate: moment.Moment;\n  public selectedEndDateChange: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\n\n  @OnChange() public activeDate: moment.Moment;\n  public activeDateChange: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\n\n  @OnChange() public viewDate: moment.Moment;\n  public viewDateChange: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\n\n  @OnChange() public showCalendars: boolean;\n  public showCalendarsChange: EventEmitter<moment.Moment> = new EventEmitter<moment.Moment>();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}