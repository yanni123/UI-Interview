{"version":3,"sources":["../../../.tmp/datepicker2/year/bs-year-picker.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,uBAAA,EAAwB,MAAO,eAAA,CAAgB;AACnE,OAAO,EAAE,cAAA,EAAe,MAAO,qCAAA,CAAsC;AACrE,OAAO,EAAE,iBAAA,EAAkB,MAAO,yCAAA,CAA0C;AAC5E,OAAO,EAAE,mBAAA,EAAoB,MAAO,2CAAA,CAA4C;AAChF,OAAO,KAAK,MAAA,MAAY,QAAA,CAAS;AAGjC;IAA2C,yCAAc;IAQvD,+BAAmB,iBAAoC,EAAE,OAA4B;QAArF,YACE,kBAAM,iBAAiB,EAAE,OAAO,CAAC,SAIlC;QAHC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,SAAS,CAAC;YACrE,KAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,CAAC;;IACN,CAAC;IATD,sBAAW,4CAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACrF,CAAC;;;OAAA;IASM,uCAAO,GAAd,UAAe,QAAa;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC;QACzE,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QACxD,IAAM,OAAO,GAAG,SAAS,GAAG,SAAS,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG;YACX,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;YAC9D,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;SAC7D,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IACI,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,ojCA0BX;oBACC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,oCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,mBAAmB,GAAG;KAC5B,EAH6F,CAG7F,CAAC;IACF,4BAAC;CApED,AAoEC,CApE0C,cAAc,GAoExD;SApEY,qBAAqB","file":"bs-year-picker.component.js","sourceRoot":"","sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePickerBase } from '../common/bs-date-picker-base.class';\nimport { BsDatePickerState } from '../common/bs-date-picker-state.provider';\nimport { BsDatePickerOptions } from '../common/bs-date-picker-options.provider';\nimport * as moment from 'moment';\n\n\nexport class BsYearPickerComponent extends DatePickerBase {\n  public title: string;\n  public calendar: any;\n\n  public get yearsStep(): number {\n    return this.options ? (this.options.ui.yearRows * this.options.ui.yearColumns) : 5;\n  }\n\n  public constructor(datePickerService: BsDatePickerState, options: BsDatePickerOptions) {\n    super(datePickerService, options);\n    this.subscriptions.push(datePickerService.selectedDateChange.subscribe(() => {\n      this.refresh(datePickerService.viewDate);\n    }));\n  }\n\n  public refresh(viewDate: any): void {\n    if (this.options.viewMode !== 'years') {\n      return;\n    }\n\n    const yearsStep = this.options.ui.yearColumns * this.options.ui.yearRows;\n    const yearStart = this.getStartingYear(viewDate.year());\n    const yearEnd = yearStart + yearsStep;\n    this.title = [\n      moment().year(yearStart).format(this.options.format.yearTitle),\n      moment().year(yearEnd).format(this.options.format.yearTitle)\n    ].join(' - ');\n    this.calendar = this.getYearsCalendarMatrix(viewDate);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-year-picker',\n  exportAs: 'bs-year-picker',\n  template: `\n<div class=\"bs-datepicker-head label-success\">\n  <button class=\"previous\" (click)=\"viewPrev('years', yearsStep)\"><span>&lsaquo;</span></button>\n  <button class=\"current\"><span>{{title}}</span></button>\n  <button class=\"next\" (click)=\"viewNext('years', yearsStep)\"><span>&rsaquo;</span></button>\n</div>\n<div class=\"bs-datepicker-body\">\n  <table role=\"grid\" class=\"years\">\n    <tbody>\n    <tr *ngFor=\"let yearsRow of calendar\">\n      <td *ngFor=\"let year of yearsRow\" role=\"gridcell\"\n          (click)=\"viewDate(year.date, {degrade: true})\"\n          (mouseenter)=\"activeDate(year.date)\"\n          (mouseleave)=\"activeDate()\"\n          [class.disabled]=\"year.isDisabled\"\n          [class.is-highlighted]=\"year.isHighlighted\"\n          [class.active]=\"year.isActive\"\n          [class.select-start]=\"year.isSelectionStart\"\n          [class.select-end]=\"year.isSelectionEnd\"\n          [class.selected]=\"year.isSelected\">\n        <span>{{year.label}}</span>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatePickerState, },\n{type: BsDatePickerOptions, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}