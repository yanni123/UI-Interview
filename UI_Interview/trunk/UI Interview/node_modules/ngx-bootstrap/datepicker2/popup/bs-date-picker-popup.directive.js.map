{"version":3,"sources":["../../../.tmp/datepicker2/popup/bs-date-picker-popup.directive.ts"],"names":[],"mappings":"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","file":"bs-date-picker-popup.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive, Input, Output, EventEmitter, OnInit, OnDestroy, Renderer,\n  ElementRef, TemplateRef, ViewContainerRef, ChangeDetectionStrategy\n} from '@angular/core';\n\n// import { BsCalendarOptionsClass } from '../common/bs-calendar-options.provider';\nimport { ComponentLoaderFactory, ComponentLoader } from '../../component-loader';\nimport { BsDatePickerContainer } from './bs-date-picker-container.component';\nimport { BsDatePickerState } from '../common/bs-date-picker-state.provider';\nimport { OnChange } from '../../utils/decorators';\nimport { BsDatePickerOptions } from '../common/bs-date-picker-options.provider';\nimport { Subscription } from 'rxjs/Subscription';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n\nexport class BsDatePickerPopupDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   public placement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   public triggers: string = 'click';\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   public container: string = 'body';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  public get isOpen(): boolean {\n    return this._datepicker.isShown;\n  }\n\n  public set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   public onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   public onHidden: EventEmitter<any>;\n\n  // here will be parsed options and set defaults\n   @OnChange() public config: BsDatePickerOptions;\n  public configChange: EventEmitter<BsDatePickerOptions> = new EventEmitter();\n\n   @OnChange() public bsValue: any;\n   public bsValueChange: EventEmitter<any> = new EventEmitter();\n\n  protected subscriptions: Subscription[] = [];\n\n  private _datepicker: ComponentLoader<BsDatePickerContainer>;\n\n  public constructor(_elementRef: ElementRef,\n                     _renderer: Renderer,\n                     _viewContainerRef: ViewContainerRef,\n                     datePickerOptions: BsDatePickerOptions,\n                     _state: BsDatePickerState,\n                     cis: ComponentLoaderFactory) {\n    this._datepicker = cis\n      .createLoader<BsDatePickerContainer>(_elementRef, _viewContainerRef, _renderer)\n      .provide({provide: BsDatePickerState, useValue: _state})\n      .provide({provide: BsDatePickerOptions, useValue: datePickerOptions});\n    // Object.assign(this, _state);\n    this.onShown = this._datepicker.onShown;\n    this.onHidden = this._datepicker.onHidden;\n\n    this.subscriptions.push(this.configChange.subscribe((v: any) => {\n      datePickerOptions.update(v);\n    }));\n\n    this.subscriptions.push(_state.selectedDateChange.subscribe((v: any) => {\n      if (datePickerOptions.mode !== 'date') {\n        return;\n      }\n      if (v && (!this.bsValue || this.bsValue && v.toDate().getTime() !== this.bsValue.getTime())) {\n        this.bsValue = v && v.toDate && v.toDate() || v;\n        this.hide();\n      }\n    }));\n\n    this.bsValue = this.bsValue || [];\n    let startDate = this.bsValue[0];\n    let endDate = this.bsValue[1];\n    let newDate = false;\n    this.subscriptions.push(_state.selectedDateChange.subscribe((v: any) => {\n      if (datePickerOptions.mode !== 'daterange') {\n        return;\n      }\n      if (v) {\n        startDate = v && v.toDate && v.toDate();\n      }\n    }));\n\n    this.subscriptions.push(_state.selectedEndDateChange.subscribe((v: any) => {\n      if (datePickerOptions.mode !== 'daterange') {\n        return;\n      }\n\n      if (!v || !endDate) {\n        newDate = true;\n      }\n\n      if (!v) {\n        return;\n      }\n\n      if (v) {\n        endDate = v && v.toDate && v.toDate();\n      }\n\n      if (newDate) {\n        this.bsValue = [startDate, endDate];\n        newDate = false;\n        this.hide();\n      }\n    }));\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  public show(): void {\n    if (this._datepicker.isShown) {\n      return;\n    }\n\n    this._datepicker\n      .attach(BsDatePickerContainer)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({});\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  public hide(): void {\n    if (this.isOpen) {\n      this._datepicker.hide();\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  public toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  public ngOnInit(): any {\n    this._datepicker.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n  }\n\n  public ngOnDestroy(): any {\n    this._datepicker.dispose();\n    this.subscriptions.forEach((sub: any) => sub.unsubscribe());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[bsDatePickerPopup]',\n  exportAs: 'bs-date-picker-popup',\n  providers: [BsDatePickerState, BsDatePickerOptions]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: ViewContainerRef, },\n{type: BsDatePickerOptions, },\n{type: BsDatePickerState, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'config': [{ type: Input },],\n'bsValue': [{ type: Input },],\n'bsValueChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}