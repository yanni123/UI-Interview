{"version":3,"sources":["../../../.tmp/datepicker2/custom-range/bs-custom-range-picker.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,uBAAA,EAAwB,MAAO,eAAA,CAAgB;AACnE,OAAO,EAAE,cAAA,EAAe,MAAO,qCAAA,CAAsC;AACrE,OAAO,EAAE,iBAAA,EAAkB,MAAO,yCAAA,CAA0C;AAC5E,OAAO,EAAE,mBAAA,EAAoB,MAAO,2CAAA,CAA4C;AAEhF,OAAO,KAAK,MAAA,MAAY,QAAA,CAAS;AAGjC;IAAkD,gDAAc;IAQ9D,sCAAmB,iBAAoC,EAAE,OAA4B;QAArF,YACE,kBAAM,iBAAiB,EAAE,OAAO,CAAC,SAElC;QAVM,aAAO,GAAY,KAAK,CAAC;QACzB,wBAAkB,GAAY,IAAI,CAAC;QAGlC,oBAAc,GAAY,KAAK,CAAC;QAKtC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CAAC,CAAC,CAAC;;IAC5E,CAAC;IAEM,6CAAM,GAAb,UAAc,KAAU,EAAE,GAAQ;QAChC,IAAM,SAAS,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACnD,IAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAE/C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAEM,8CAAO,GAAd;QAAA,iBAqBC;QApBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC;QACT,CAAC;QAED,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,oBAAoB,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,GAAW;YACjC,IAAM,KAAK,GAAI,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAc,CAAC,GAAG,CAAC,UAAC,IAAS,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,EAAZ,CAAY,CAAC,CAAC;YACtF,MAAM,CAAC,EAAC,GAAG,KAAA,EAAE,KAAK,OAAA,EAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAmB,CAAC;IAClG,CAAC;IAEM,kDAAW,GAAlB,UAAmB,KAAsB;QACvC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAEM,mDAAY,GAAnB,UAAoB,KAAsB;QACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QACjG,CAAC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAEM,yDAAkB,GAAzB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEM,oDAAa,GAApB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5C,CAAC;IACI,uCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,yXAQX;oBACC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,mBAAmB,GAAG;KAC5B,EAH6F,CAG7F,CAAC;IACF,mCAAC;CAhGD,AAgGC,CAhGiD,cAAc,GAgG/D;SAhGY,4BAA4B","file":"bs-custom-range-picker.component.js","sourceRoot":"","sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DatePickerBase } from '../common/bs-date-picker-base.class';\nimport { BsDatePickerState } from '../common/bs-date-picker-state.provider';\nimport { BsDatePickerOptions } from '../common/bs-date-picker-options.provider';\n\nimport * as moment from 'moment';\n\n\nexport class BsCustomRangePickerComponent extends DatePickerBase {\n  public isShown: boolean = false;\n  public isCustomRangeShown: boolean = true;\n  public ranges: { key: string, value: moment.Moment[] }[];\n\n  private _showCalendars: boolean = false;\n  private _prevSelected: moment.Moment[];\n\n  public constructor(datePickerService: BsDatePickerState, options: BsDatePickerOptions) {\n    super(datePickerService, options);\n    this.subscriptions.push(options.onUpdate.subscribe(() => this.refresh()));\n  }\n\n  public active(start: any, end: any): void {\n    const startDate = moment().subtract(start, 'days');\n    const endDate = moment().subtract(end, 'days');\n\n    this.selectDate(startDate);\n    this.selectDate(endDate);\n  }\n\n  public refresh(): void {\n    if (!this.options.ranges) {\n      this.isShown = false;\n      return;\n    }\n\n    const keys = Object.keys(this.options.ranges);\n    if (!keys || !keys.length) {\n      this.isShown = false;\n      return;\n    }\n\n    this.isCustomRangeShown = this.options.ui.showCustomRangeLabel;\n    this.isShown = true;\n\n    this.ranges = keys.map((key: string) => {\n      const value = (this.options.ranges[key] as string[]).map((date: any) => moment(date));\n      return {key, value};\n    });\n\n    this.datePickerState.showCalendars = this._showCalendars || this.options.ui.alwaysShowCalendars;\n  }\n\n  public selectRange(range: moment.Moment[]): void {\n    this._showCalendars = false;\n    this._prevSelected = void 0;\n    this.resetSelection();\n    this.selectDate(range[0]);\n    this.selectDate(range[1]);\n  }\n\n  public previewRange(range: moment.Moment[]): void {\n    if (!this._prevSelected) {\n      this._prevSelected = [this.datePickerState.selectedDate, this.datePickerState.selectedEndDate];\n    }\n    this.resetSelection();\n    this.selectDate(range[0]);\n    this.selectDate(range[1]);\n  }\n\n  public finishPreviewRange(): void {\n    if (!this._prevSelected) {\n      return;\n    }\n\n    this.datePickerState.selectedDate = this._prevSelected[0];\n    this.datePickerState.selectedEndDate = this._prevSelected[1];\n    this._prevSelected = void 0;\n  }\n\n  public showCalendars(): void {\n    this._showCalendars = true;\n    this.datePickerState.showCalendars = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-custom-range-picker',\n  exportAs: 'bs-custom-range-picker',\n  template: `\n<div class=\"bs-datepicker-predefined-btns\" *ngIf=\"isShown\" (mouseleave)=\"finishPreviewRange()\">\n  <button *ngFor=\"let range of ranges\"\n          (click)=\"selectRange(range.value)\"\n          (mouseover)=\"previewRange(range.value)\">{{ range.key }}\n  </button>\n  <button (click)=\"showCalendars()\" *ngIf=\"isCustomRangeShown\">Custom Range</button>\n</div>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatePickerState, },\n{type: BsDatePickerOptions, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}