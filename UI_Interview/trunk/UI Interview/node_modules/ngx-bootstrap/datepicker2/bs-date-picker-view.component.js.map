{"version":3,"sources":["../../.tmp/datepicker2/bs-date-picker-view.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAyB,MAAO,eAAA,CAAgB;AACpE,OAAO,EAAE,mBAAA,EAAoB,MAAO,0CAAA,CAA2C;AAC/E,OAAO,EAAE,sBAAA,EAAuB,MAAO,uCAAA,CAAwC;AAC/E,OAAO,EAAE,iBAAA,EAAkB,MAAO,wCAAA,CAAyC;AAE3E,2BAA2B;AAE3B;IAQE,mCAAmB,eAAkC,EAAE,iBAAsC,EAAE,QAAgC;QAA/H,iBAIC;QAXM,YAAO,GAAY,IAAI,CAAC;QAQ7B,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,mBAAmB,CAAC,SAAS,CAAC,UAAC,CAAU,IAAK,OAAA,KAAI,CAAC,OAAO,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACvG,CAAC;IAEM,4CAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAEM,+CAAW,GAAlB;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IACI,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,qBAAqB;oBAC/B,QAAQ,EAAE,gbAUX;iBACA,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,mBAAmB,GAAG;QAC7B,EAAC,IAAI,EAAE,sBAAsB,GAAG;KAC/B,EAJ6F,CAI7F,CAAC;IACK,wCAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC3B,CAAC;IACF,gCAAC;CAjDD,AAiDC,IAAA;SAjDY,yBAAyB","file":"bs-date-picker-view.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { BsDatePickerOptions } from './common/bs-date-picker-options.provider';\nimport { BsCalendarOptionsClass } from './common/bs-calendar-options.provider';\nimport { BsDatePickerState } from './common/bs-date-picker-state.provider';\n\n// todo: rename to calendar\n\nexport class BsDatePickerViewComponent implements OnInit, OnDestroy {\n  public isShown: boolean = true;\n  public options: BsDatePickerOptions;\n  public cOptions: BsCalendarOptionsClass;\n   public bsRole: string;\n\n  private _subscription:any;\n\n  public constructor(datePickerState: BsDatePickerState, datePickerOptions: BsDatePickerOptions, cOptions: BsCalendarOptionsClass) {\n    this.options = datePickerOptions;\n    this.cOptions = cOptions;\n    this._subscription = datePickerState.showCalendarsChange.subscribe((v: boolean) => this.isShown = v);\n  }\n\n  public ngOnInit(): void {\n    this.cOptions.update({\n      bsRole: this.bsRole\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-date-picker-view',\n  exportAs: 'bs-date-picker-view',\n  template: `\n<div class=\"bs-datepicker bs-timepicker label-success\" role=\"application\"\n     *ngIf=\"isShown\"\n     [ngSwitch]=\"options.viewMode\">\n  <bs-current-date></bs-current-date>\n  <bs-day-picker *ngSwitchCase=\"'days'\"></bs-day-picker>\n  <bs-month-picker *ngSwitchCase=\"'months'\"></bs-month-picker>\n  <bs-year-picker *ngSwitchCase=\"'years'\"></bs-year-picker>\n  <!--<bs-datetimepicker></bs-datetimepicker>-->\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatePickerState, },\n{type: BsDatePickerOptions, },\n{type: BsCalendarOptionsClass, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'bsRole': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}