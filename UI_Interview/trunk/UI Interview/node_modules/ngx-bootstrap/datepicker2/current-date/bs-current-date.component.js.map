{"version":3,"sources":["../../../.tmp/datepicker2/current-date/bs-current-date.component.ts"],"names":[],"mappings":"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","file":"bs-current-date.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\nimport { DatePickerBase } from '../common/bs-date-picker-base.class';\nimport { BsDatePickerState } from '../common/bs-date-picker-state.provider';\nimport { BsDatePickerOptions } from '../common/bs-date-picker-options.provider';\nimport { BsCalendarOptionsClass } from '../common/bs-calendar-options.provider';\nimport * as moment from 'moment';\n\n\nexport class BsCurrentDateComponent extends DatePickerBase {\n  public title: string;\n  public isShown: boolean = true;\n  private cOptions: BsCalendarOptionsClass;\n\n  public constructor(datePickerState: BsDatePickerState, options: BsDatePickerOptions, cOptions: BsCalendarOptionsClass) {\n    super(datePickerState, options);\n    this.cOptions = cOptions;\n    this.subscriptions.push(datePickerState.selectedDateChange.subscribe(() => this.refresh()));\n    this.subscriptions.push(datePickerState.activeDateChange.subscribe(() => this.refresh()));\n    this.subscriptions.push(options.onUpdate.subscribe(() => this.refresh()));\n  }\n\n  public refresh(): void {\n    if (!this.cOptions) {\n      return;\n    }\n\n    if (!this.options.ui.showCurrentDate) {\n      this.isShown = false;\n      return;\n    }\n    // todo: add support of timepicker enabled/disabled\n    // todo: add support of min view mode\n    const active = this.datePickerState.activeDate;\n    const selected = this.datePickerState.selectedDate;\n    const selectedEnd = this.datePickerState.selectedEndDate;\n\n    if (this.options.isDatePicker) {\n      this.title = this.getTitle(active || selected);\n      return;\n    }\n\n    if (this.options.isDateRangePicker) {\n      if (this.cOptions.isLeft) {\n        // if selection end date not selected - show selection start or active date\n        // if selection end date selected - show selection start date\n        this.title = this.getTitle(!selectedEnd ? (selected || active) : (active || selected));\n      }\n\n      if (this.cOptions.isRight) {\n        // if no selection start - show empty current date title\n        // if start date selected - show active date\n        // until range end is not selected - than show range end date\n        this.title = selected ? this.getTitle(selectedEnd || active) : '';\n      }\n    }\n  }\n\n  public getTitle(date: moment.Moment): string {\n    if (!date) {\n      return '';\n    }\n    return moment(date).format(this.options.format.currentDate);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-current-date',\n  exportAs: 'bs-current-date',\n  template: `\n<div *ngIf=\"isShown\" class=\"current-timedate\">\n  <span>{{title}}</span>\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDatePickerState, },\n{type: BsDatePickerOptions, },\n{type: BsCalendarOptionsClass, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}