{"version":3,"sources":["../../.tmp/datepicker/bs-daterangepicker.component.ts"],"names":[],"mappings":"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","file":"bs-daterangepicker.component.js","sourceRoot":"","sourcesContent":["import {\n  Component, EventEmitter, Input, OnDestroy, OnInit, Output, ComponentRef, ElementRef,\n  Renderer,\n  ViewContainerRef\n} from '@angular/core';\nimport { BsDaterangepickerContainerComponent } from './themes/bs/bs-daterangepicker-container.component';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ComponentLoaderFactory } from '../component-loader/component-loader.factory';\nimport { ComponentLoader } from '../component-loader/component-loader.class';\n\n\nexport class BsDaterangepickerComponent implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n   triggers = 'click';\n\n   outsideClick = true;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n   container = 'body';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  \n  public get isOpen(): boolean {\n    return this._datepicker.isShown;\n  }\n\n  public set isOpen(value: boolean) {\n    if (value) { this.show(); } else { this.hide(); }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n   onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n   onHidden: EventEmitter<any>;\n\n  // here will be parsed options and set defaults\n  // @Input()  config: BsDatePickerOptions;\n  // configChange: EventEmitter<BsDatePickerOptions> = new EventEmitter();\n\n  _bsValue: Date[];\n  \n  set bsValue(value: Date[]) {\n    this._bsValue = value;\n    this.bsValueChange.emit(value);\n  }\n\n   bsValueChange: EventEmitter<Date[]> = new EventEmitter();\n\n  protected subscriptions: Subscription[] = [];\n\n  private _datepicker: ComponentLoader<BsDaterangepickerContainerComponent>;\n  private _datepickerRef: ComponentRef<BsDaterangepickerContainerComponent>;\n\n  constructor(_elementRef: ElementRef,\n              _renderer: Renderer,\n              _viewContainerRef: ViewContainerRef,\n              cis: ComponentLoaderFactory) {\n    this._datepicker = cis\n      .createLoader<BsDaterangepickerContainerComponent>(_elementRef, _viewContainerRef, _renderer);\n    // .provide({provide: PopoverConfig, useValue: _config});\n    // Object.assign(this, _config);\n    this.onShown = this._datepicker.onShown;\n    this.onHidden = this._datepicker.onHidden;\n  }\n\n  /**\n   * Opens an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  show(): void {\n    if (this._datepicker.isShown) {\n      return;\n    }\n\n    this._datepickerRef = this._datepicker\n      .attach(BsDaterangepickerContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({placement: this.placement});\n\n    // link with datepicker\n    // set initial value of picker\n    this._datepickerRef.instance.value = this._bsValue;\n\n    // if date changes from external source (model -> view)\n    this.subscriptions.push(this.bsValueChange.subscribe((value: Date[]) => {\n      this._datepickerRef.instance.value = value;\n    }));\n\n    // if date changes from picker (view -> model)\n    this.subscriptions.push(this._datepickerRef.instance\n      .valueChange\n      .filter((range: Date[]) => range && range[0] && !!range[1])\n      .subscribe((value: Date[]) => {\n        if (value === this._bsValue) {return; }\n        this.bsValueChange.emit(value);\n        this.hide();\n      }));\n  }\n\n  /**\n   * Closes an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._datepicker.hide();\n    }\n  }\n\n  /**\n   * Toggles an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): any {\n    this._datepicker.listen({\n      outsideClick: this.outsideClick,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): any {\n    this._datepicker.dispose();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-daterangepicker,[bsDaterangepicker]',\n  exportAs: 'bsDaterangepicker',\n  template: ' '\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: ViewContainerRef, },\n{type: ComponentLoaderFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'outsideClick': [{ type: Input },],\n'container': [{ type: Input },],\n'isOpen': [{ type: Input },],\n'onShown': [{ type: Output },],\n'onHidden': [{ type: Output },],\n'bsValue': [{ type: Input },],\n'bsValueChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}