{"version":3,"sources":["../../../.tmp/datepicker/reducer/bs-datepicker.actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAK3C;IAAA;IAuEA,CAAC;IA5DC,uCAAS,GAAT,UAAU,QAAc;QACtB,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,SAAS;YACnC,OAAO,EAAE,QAAQ;SAClB,CAAC;IACJ,CAAC;IAED,oCAAM,GAAN;QACE,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,MAAM;SACjC,CAAC;IACJ,CAAC;IAED,kCAAI,GAAJ;QACE,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,IAAI;SAC/B,CAAC;IACJ,CAAC;IAED,oCAAM,GAAN,UAAO,IAAU;QACf,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,MAAM;YAChC,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,0CAAY,GAAZ,UAAa,IAAc;QACzB,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,eAAe;YACzC,OAAO,EAAE,IAAI;SACd,CAAC;IACJ,CAAC;IAED,2CAAa,GAAb,UAAc,OAAgC;QAC5C,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,cAAc;YACxC,OAAO,EAAE,OAAO;SACjB,CAAC;IACJ,CAAC;IAED,oBAAoB;IACpB,yCAAW,GAAX,UAAY,KAAa;QACvB,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,YAAY;YACtC,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,mCAAK,GAAL,UAAM,KAAoB;QACxB,MAAM,CAAC;YACL,IAAI,EAAE,mBAAmB,CAAC,KAAK;YAC/B,OAAO,EAAE,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI;SACjD,CAAC;IACJ,CAAC;IA/De,6BAAS,GAAG,qCAAqC,CAAC;IAClD,0BAAM,GAAG,uCAAuC,CAAC;IACjD,wBAAI,GAAG,wBAAwB,CAAC;IAChC,0BAAM,GAAG,0BAA0B,CAAC;IACpC,mCAAe,GAAG,8BAA8B,CAAC;IACjD,kCAAc,GAAG,oCAAoC,CAAC;IACtD,yBAAK,GAAG,yBAAyB,CAAC;IAElC,gCAAY,GAAG,sCAAsC,CAAC;IAwDjE,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,0BAAC;CAvED,AAuEC,IAAA;SAvEY,mBAAmB","file":"bs-datepicker.actions.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DatepickerRenderOptions, DayHoverEvent, TimeUnit } from '../models/index';\nimport { Action } from '../../mini-ngrx/index';\n\n\nexport class BsDatepickerActions {\n  static readonly CALCULATE = '[datepicker] calculate dates matrix';\n  static readonly FORMAT = '[datepicker] format datepicker values';\n  static readonly FLAG = '[datepicker] set flags';\n  static readonly SELECT = '[datepicker] select date';\n  static readonly STEP_NAVIGATION = '[datepicker] shift view date';\n  static readonly RENDER_OPTIONS = '[datepicker] update render options';\n  static readonly HOVER = '[datepicker] hover date';\n\n  static readonly SELECT_RANGE = '[daterangepicker] select dates range';\n\n  calculate(viewDate: Date): Action {\n    return {\n      type: BsDatepickerActions.CALCULATE,\n      payload: viewDate\n    };\n  }\n\n  format(): Action {\n    return {\n      type: BsDatepickerActions.FORMAT\n    };\n  }\n\n  flag(): Action {\n    return {\n      type: BsDatepickerActions.FLAG\n    };\n  }\n\n  select(date: Date): Action {\n    return {\n      type: BsDatepickerActions.SELECT,\n      payload: date\n    };\n  }\n\n  navigateStep(step: TimeUnit): Action {\n    return {\n      type: BsDatepickerActions.STEP_NAVIGATION,\n      payload: step\n    };\n  }\n\n  renderOptions(options: DatepickerRenderOptions): Action {\n    return {\n      type: BsDatepickerActions.RENDER_OPTIONS,\n      payload: options\n    };\n  }\n\n  // date range picker\n  selectRange(value: Date[]): Action {\n    return {\n      type: BsDatepickerActions.SELECT_RANGE,\n      payload: value\n    };\n  }\n\n  hover(event: DayHoverEvent): Action {\n    return {\n      type: BsDatepickerActions.HOVER,\n      payload: event.isHovered ? event.day.date : null\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}