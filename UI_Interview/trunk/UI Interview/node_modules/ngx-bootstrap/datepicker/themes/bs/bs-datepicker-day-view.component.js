import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
var BsDatepickerDayViewComponent = (function () {
    function BsDatepickerDayViewComponent() {
        this.onSelect = new EventEmitter();
        this.onHover = new EventEmitter();
    }
    BsDatepickerDayViewComponent.prototype.selectDay = function (day) {
        this.onSelect.emit(day);
    };
    BsDatepickerDayViewComponent.prototype.hoverDay = function (day, isHovered) {
        this.onHover.emit({ day: day, isHovered: isHovered });
    };
    BsDatepickerDayViewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'bs-datepicker-day-view',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n    <span\n      (click)=\"selectDay(day)\"\n      (mouseenter)=\"hoverDay(day, true)\"\n      (mouseleave)=\"hoverDay(day, false)\"\n      [class.disabled]=\"day.isDisabled\"\n      [class.is-highlighted]=\"day.isHovered\"\n      [class.is-other-month]=\"day.isOtherMonth\"\n      [class.in-range]=\"day.isInRange\"\n      [class.select-start]=\"day.isSelectionStart\"\n      [class.select-end]=\"day.isSelectionEnd\"\n      [class.selected]=\"day.isSelected\"\n    >{{day.label}}</span>\n  "
                },] },
    ];
    /** @nocollapse */
    BsDatepickerDayViewComponent.ctorParameters = function () { return []; };
    BsDatepickerDayViewComponent.propDecorators = {
        'day': [{ type: Input },],
        'onSelect': [{ type: Output },],
        'onHover': [{ type: Output },],
    };
    return BsDatepickerDayViewComponent;
}());
export { BsDatepickerDayViewComponent };
//# sourceMappingURL=bs-datepicker-day-view.component.js.map